version: '3.8'

services:
  # 开发环境主应用
  app-dev:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    container_name: ${PROJECT_NAME:-3AI}-app-dev
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
      - "${PORT:-3000}:${PORT:-3000}"
      - "${VITE_PORT:-5173}:5173"  # Vite dev server
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://redis-dev:6379/0}
      - PROJECT_NAME=${PROJECT_NAME:-3AI}
      - PORT=${PORT:-3000}
      - API_PORT=${API_PORT:-8000}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.venv
      - ../docs/03-管理:/app/config/management
    depends_on:
      - db-dev
      - redis-dev
    networks:
      - ${PROJECT_NAME:-3AI}-dev-network
    restart: unless-stopped
    command: >
      sh -c "npm install && 
             pip install -r requirements.txt && 
             npm run dev"

  # 开发数据库
  db-dev:
    image: postgres:15-alpine
    container_name: ${PROJECT_NAME:-3AI}-db-dev
    environment:
      - POSTGRES_DB=${DB_NAME:-${PROJECT_NAME:-3AI}_dev_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-devpassword}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "${DB_DEV_PORT:-5433}:5432"
    networks:
      - ${PROJECT_NAME:-3AI}-dev-network
    restart: unless-stopped

  # 开发Redis
  redis-dev:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME:-3AI}-redis-dev
    ports:
      - "${REDIS_DEV_PORT:-6380}:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - ${PROJECT_NAME:-3AI}-dev-network
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-}

  # 邮件服务器 (开发用)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: 3ai-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - 3ai-dev-network
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  ${PROJECT_NAME:-3AI}-dev-network:
    driver: bridge