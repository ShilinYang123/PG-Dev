version: '3.8'

services:
  # 主应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-3AI}-app
    ports:
      - "${API_PORT:-8000}:${API_PORT:-8000}"
      - "${PORT:-3000}:${PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - PROJECT_NAME=${PROJECT_NAME:-3AI}
      - PORT=${PORT:-3000}
      - API_PORT=${API_PORT:-8000}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
      - ../docs/03-管理:/app/config/management
    depends_on:
      - db
      - redis
    networks:
      - ${PROJECT_NAME:-3AI}-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-8000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    container_name: ${PROJECT_NAME:-3AI}-db
    environment:
      - POSTGRES_DB=${DB_NAME:-${PROJECT_NAME:-3AI}_db}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - ${PROJECT_NAME:-3AI}-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME:-3AI}-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - ${PROJECT_NAME:-3AI}-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --requirepass ${REDIS_PASSWORD:-}

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: ${PROJECT_NAME:-3AI}-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./config/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - ${PROJECT_NAME:-3AI}-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ${PROJECT_NAME:-3AI}-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16